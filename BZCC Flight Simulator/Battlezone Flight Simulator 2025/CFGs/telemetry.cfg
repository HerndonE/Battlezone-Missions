// ========================
// BATTLEZONE FLIGHT SIMULATOR TELEMETRTY UI
//
// By F9bomber.
// Modified by General BlackDragon.
// ========================

ConfigureInterface()
{
	DefineControlType("TelemtryListbox", "LISTBOX")
	{
		//Align("<Control");
		Geometry("HCENTRE", "VCENTRE");
		Position(0, 0); //negative y is up, positive is down
		Size(50, 120);
		BevelSize(5);
		BorderSize(5);
		CellSize(50, 12);
		Font("SMALL");
		Style("TRANSPARENT", "NOSELECTION", "AUTOSCROLL");
		ItemConfig()
		{
			Style("TRANSPARENT");
			JustifyText("LEFT");
		}
		TabStop(0);
	}

	DefineControlType("TelemtryListboxB", "LISTBOX")
	{
		//Align("<Control");
		Geometry("HCENTRE", "VCENTRE");
		Position(0, 0); //negative y is up, positive is down
		Size(50, 120);
		BevelSize(5);
		BorderSize(5);
		CellSize(50, 12);
		Font("SMALL");
		Style("TRANSPARENT", "NOSELECTION", "AUTOSCROLL");
		ItemConfig()
		{
			Style("TRANSPARENT");
			JustifyText("RIGHT");
		}
		TabStop(0);
	}

	DefineControlType("DegreeNotch", "STATIC")
	{
		//Align("<Control");
		Geometry("LEFT", "TOP", "HINTERNAL", "VINTERNAL");
		Position(0, 0);
		Size(10, 8);
		Style("TRANSPARENT");
		Font("SMALL");
		JustifyText("CENTER");
		Text("-");
	}
}

// Speedometer
CreateControl("SpeedBox", "TelemtryListbox") 
{
	Position(-80, 0);
}

// Altimiter
CreateControl("AltBox", "TelemtryListboxB")
{
	Position(80, 0);
//	ItemConfig()
//	{
//		Style("TRANSPARENT");
//		JustifyText("RIGHT");
//	}
}

// Compass
CreateControl("playerHeadingBox", "TelemtryListbox")
{
	Position(0, 75);
	Size(50, 30);
	CellSize(50, 10);
	ItemConfig()
	{
		Style("TRANSPARENT");
		JustifyText("CENTER");
	}
}

// Left Center line
CreateControl("RollBoxLeft", "DegreeNotch")
{
	Geometry("HCENTRE", "VCENTRE");
	Position(-30, 0);
	Size(10, 8);
	Font("LARGE");
}

// 0
CreateControl("RollBoxLeft0Degrees", "DegreeNotch")
{
	Align("<RollBoxLeft");
	Position(-10, 0);
}

// 15
CreateControl("RollBoxLeft45Degrees", "DegreeNotch")
{
	Align("<RollBoxLeft0Degrees");
	Position(0, 10);
}

// 25
CreateControl("RollBoxLeft90Degrees", "DegreeNotch")
{
	Align("<RollBoxLeft45Degrees");
	Position(0, 10);
}

// 35
CreateControl("RollBoxLeft135Degrees", "DegreeNotch")
{
	Align("<RollBoxLeft90Degrees");
	Position(0, 10);
}

// 45
CreateControl("RollBoxLeft180Degrees", "DegreeNotch")
{
	Align("<RollBoxLeft135Degrees");
	Position(0, 10);
}

// -15
CreateControl("RollBoxLeftNeg45Degrees", "DegreeNotch")
{
	Align("<RollBoxLeft0Degrees");
	Position(0, -10);
}

// -25
CreateControl("RollBoxLeftNeg90Degrees", "DegreeNotch")
{
	Align("<RollBoxLeftNeg45Degrees");
	Position(0, -10);
}

// -35
CreateControl("RollBoxLeftNeg135Degrees", "DegreeNotch")
{
	Align("<RollBoxLeftNeg90Degrees");
	Position(0, -10);
}

// -45
CreateControl("RollBoxLeftNeg180Degrees", "DegreeNotch")
{
	Align("<RollBoxLeftNeg135Degrees");
	Position(0, -10);
}

// Right Center line
CreateControl("RollBoxRight", "DegreeNotch")
{
	Geometry("HCENTRE", "VCENTRE");
	Position(30, 0);
	Size(10, 8);
	Font("LARGE");
}

// 0
CreateControl("RollBoxRight0Degrees", "DegreeNotch")
{
	Align("<RollBoxRight");
	Position(10, 0);
}

// -15
CreateControl("RollBoxRight45Degrees", "DegreeNotch")
{
	Align("<RollBoxRight0Degrees");
	Position(0, -10);
}

// -25
CreateControl("RollBoxRight90Degrees", "DegreeNotch")
{
	Align("<RollBoxRight45Degrees");
	Position(0, -10);
}

// -35
CreateControl("RollBoxRight135Degrees", "DegreeNotch")
{
	Align("<RollBoxRight90Degrees");
	Position(0, -10);
}

// -45
CreateControl("RollBoxRight180Degrees", "DegreeNotch")
{
	Align("<RollBoxRight135Degrees");
	Position(0, -10);
}

// 15
CreateControl("RollBoxRightNeg45Degrees", "DegreeNotch")
{
	Align("<RollBoxRight0Degrees");
	Position(0, 10);
}

// 25
CreateControl("RollBoxRightNeg90Degrees", "DegreeNotch")
{
	Align("<RollBoxRightNeg45Degrees");
	Position(0, 10);
}

// 35
CreateControl("RollBoxRightNeg135Degrees", "DegreeNotch")
{
	Align("<RollBoxRightNeg90Degrees");
	Position(0, 10);
}

// 45
CreateControl("RollBoxRightNeg180Degrees", "DegreeNotch")
{
	Align("<RollBoxRightNeg135Degrees");
	Position(0, 10);
}
